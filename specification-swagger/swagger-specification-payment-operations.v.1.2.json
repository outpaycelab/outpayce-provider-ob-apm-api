{
  "swagger": "2.0",
  "info": {
    "title": "Outpayce Connect API Acceptance Payment Operations",
    "version": "0.4.0",
    "contact": {
      "name": "Outpayce Provider API Discussions",
      "url": "https://github.com/outpaycelab/outpayce-provider-ob-api/discussions",
      "email": "providerapi.support@outpayce.com"
    },
    "description": "**Preliminary Note:** This document aims at describing how to use the Amadeus JSON API for core Payment  *Operation* management, dealing with payment transactions. \nIt is tailored for card only operations. This is an early alpha  version of the API that therefore is prone to change and has no contract value. \nAmadeus APIs comply with Amadeus REST/JSON Rules  & Guideline v1.3 and are based on *application/vnd.amadeus+json* [media type](https://www.iana.org/assignments/media-types/media-types.xhtml). For further details please refer to [developers.amadeus.com](https://developers.amadeus.com).\n ## Authentication\n ### *Basic HTTP Authentication method*:\n With this method, one of the request headers (Authorization request header) is populated with a username/password pair, encoded using Base64. \n ```\nContent-Type: \"application/vnd.amadeus+json\" \n Authorization: \"Basic VXNlcm5hbWU6cGFzc3dvcmQ=\" \n ``` \n\n## Resource: *Operations*\nThe main payment resource used here is the '*Operations*' resource. An *Operation* is either a payment operation implying or not a direct move of funds between a payer and a payee. An *Operation* is therefore an abstract resource  that may be one of the following: *Authorization*, *Reversal*, *Capture* and *Refund*.\n\n### Payment Operation ontology\n\n#### *Authorization*\nAn  *Authorization* is usually the first transaction performed during the acceptance stage of a payment, ie an agreement on some money to be exchanged, at once or later, between two parties, the individual or corporate *payer* and the *payee*. When successful, it usually results in the amount at  stake being blocked for a limited period of time on the payer's account.\n\n#### *Reversal*\nA *Reversal* is an optional transaction which  must be consecutive to a successful authorization performed during the acceptance stage of a payment. It consists in partially or fully reversing the previously authorized amount.\n\n#### *Capture* & *Refund*\n*Capture* and *Refund* are operations performed during the clearing stage of a payment, ie when service is sold and money has to be transferred, and vice versa. Depending on the payment, *Capture* could be immediate at *Authorization* time  when successful. This is what is called 1-step or single-message payment. In that case, the *Authorization* prevails and there is no use of any separate  *Capture*. Otherwise, money actually starts to move only when the act of *Capture* is confirmed, which is called 2-step or dual-message payment choreography.  When reimbursement is due, a *Refund* will be issued from the *payee* to the *payer*.\n\n## Quickstart Guide\n\n### 1. Merchant account setup\nAmadeus Payment Gateway sends payment operations on behalf of merchants. A merchant is identified in your system by a *MERCHANT_ACCOUNT*.\n\n### 2. Authorization\nAt the end of a fruitful shopping session, the client of the merchant agrees to pay with their payment card _4000000000000001_ for an amount of _123.45â‚¬_. Amadeus Payment Gateway collects the card information and sends a request to your system such as:\n```\nPUT https://{your-host-name}/outpayce/v1/authorizations/{authorizationId} HTTP/1.1\nContent-Type: application/vnd.amadeus+json\n...\n  \n{\n  \"data\": {\n      \"id\": \"{authorizationId}\",\n      \"amount\": {\n          \"value\": \"123.45\",\n          \"currencyCode\": \"EUR\"\n      },\n      \"authorizationType\": \"AUTHORIZATION_ONLY\",\n      \"method\": \"CARD\",\n      \"card\": {\n          \"vendorCode\": \"VI\",\n          \"cardNumber\": \"4000000000000001\",\n          \"cvv\": \"123\",\n          \"expiryDate\": \"2024-12\"\n      },\n      \"operationContext\": {\n          \"merchantAccount\": {\n              \"name\": \"MERCHANT_ACCOUNT\",\n              \"login\": \"merchantLogin\",\n              \"password\": {\n                 \"payload\":\"merchantPasword\"\n              }\n          }\n     }\n  }\n}\n```\n\nYour application parses the request and after processing it, returns a response such as:\n  ```\nHTTP/1.1 201 Created\nLocation: https://{your-host-name}/outpayce/v1/authorizations/{authorizationId}\nContent-Type: application/vnd.amadeus+json\n\n  {\n    \"data\": {\n        \"id\": \"{authorizationId}\",\n        \"method\": \"CARD\",\n        \"card\": {\n            \"vendorCode\": \"VI\",\n            \"maskedCardNumber\": \"400000------0001\"\n        },\n        \"approvalCode\": \"APPROVAL_CODE\",\n        \"timestamp\": \"2022-11-28T13:37:00Z\"\n    }\n  }\n  ```\n\n*With regards to Credit Card transactions, this is the minimum amount of data Outpayce expects to receive in the response. Without at least these fields, Outpayce will not be able to process the Authorization response.There are other optional fields that can be sent in the response such as **externalId** and **schemeTransactionId**.*\n \n Usually, after this successful operation, the order is confirmed and the checkout process ends here.\n\n### 3. R
  },
  "host": "your-host-name",
  "schemes": [
    "https"
  ],
  "produces": [
    "application/vnd.amadeus+json"
  ],
  "consumes": [
    "application/vnd.amadeus+json"
  ],
  "paths": {
    "/authorizations/{id}": {
      "put": {
        "summary": "",
        "operationId": "put-authorizations",
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/AuthorizationResponse"
            },
            "headers": {
              "location": {
                "type": "string",
                "description": "A link to the newly created resource."
              }
            },
            "examples": {
              "Successful Response": {
                "data": {
                  "id": "{authorizationId}",
                  "method": "CARD",
                  "card": {
                    "vendorCode": "VI",
                    "maskedCardNumber": "400000------0001"
                  },
                  "approvalCode": "APPROVAL_CODE",
                  "externalId": "externalReference",
                  "timestamp": "2022-11-28T13:37:00Z"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/error-response-400"
          },
          "401": {
            "$ref": "#/responses/error-response-401"
          },
          "403": {
            "$ref": "#/responses/error-response-403"
          },
          "409": {
            "$ref": "#/responses/error-response-409"
          },
          "422": {
            "$ref": "#/responses/error-response-422"
          },
          "424": {
            "$ref": "#/responses/error-response-424"
          },
          "500": {
            "$ref": "#/responses/error-response-500"
          }
        },
        "description": "This endpoint initiates an authorization operation.\n\n# Examples of scenarios\n## Basic Card Authorization\nThis is basic authorization scenario where card information is provided to perform a successful authorization. This data is the minimum amount of data Outpayce will always send as part of an authorization request.\n\n## Authorization with additional data\nThis is an authorization request that includes details related to the merchant account or acquirer information. If these details are provided, they will always be included in the payload of the request.\n\n## Authorization with 3DSv2 Data\nThis is an authorization request populated with 3DSv2 authentication details.\n\n## Authorization with Travel Segment data\nThis is an authorization request populated with flight and pasenger details.\n\n## Authorization with Installment data \nThis is an authorization request populated with  Installment data.\n\n## Authorization request with Card on File Capabilities\n### Initial Storing request of CC details\nThis is an authorization scenario where the cardholder initiates the transaction. On top of setting the _transactionInitiator_ as 'HOLDER', the API consumer also indicates the _instrumentFilingRequest_ of 'STORING'.\n\n### Cardholder Initiated Transaction with Card on File\nThis is an authorization scenario where the cardholder initiates the transaction using stored credentials. On top of setting the _transactionInitiator_ as 'HOLDER', the API consumer also indicates the _instrumentFilingRequest_ of 'REUSE'.\n\n### Merchant Initiated Transaction\nThis is an authorization scenario where the merchant initiates the transaction, on behalf of the cardholder. In that case, on top of setting the _transactionInitiator_ as 'MERCHANT', this time the API consumer also indicates the _instrumentFilingRequest_ of 'REUSE'.\n\n### Request Examples\n### Basic Card Authorization Request\n```\n  PUT https://{your-host-name}/outpayce/v1/authorizations/{authorizationId} HTTP/1.1\n  Content-Type: application/vnd.amadeus+json\n  ...\n{\n  \"data\": {\n    \"id\": \"{authorizationId}\",\n    \"amount\": {\n      \"value\": \"123.45\",\n      \"currencyCode\": \"EUR\"\n    },\n    \"authorizationType\": \"AUTHORIZATION_ONLY\",\n    \"method\": \"CARD\",\n    \"card\": {\n      \"vendorCode\": \"VI\",\n      \"cardNumber\": \"4000000000000001\",\n      \"cvv\": \"123\",\n      \"expiryDate\": \"2024-12\"\n    }\n  }\n}\n```\n\n### Authorization with additional data\n```\n  PUT https://{your-host-name}/outpayce/v1/authorizations/{authorizationId} HTTP/1.1\n  Content-Type: application/vnd.amadeus+json\n  ...\n{\n  \"data\": {\n    \"id\": \"{authorizationId}\",\n    \"amount\": {\n      \"value\": \"123.45\",\n      \"currencyCode\": \"EUR\"\n    },\n    \"authorizationType\": \"AUTHORIZATION_ONLY\",\n    \"method\": \"CARD\",\n    \"pointOfInteraction\": {\n      \"operatingEnvironment\": {\n        \"holderInteractionMode\": \"ECOMMERCE\"\n      }\n    },\n    \"card\": {\n      \"vendorCode\": \"VI\",\n      \"cardNumber\": \"4000000000000001\",\n      \"cvv\": \"123\",\n      \"holderName\": \"Card Holder Name\",\n      \"expiryDate\": \"2024-12\"\n    },\n    \"operationContext\": {\n      \"merchantAccount\": {\n        \"name\": \"MERCHANT_ACCOUNT\",\n        \"login\": \"merchantLogin\",\n        \"password\": {\n          \"payload\": \"merchantPasword\"\n        }\n      },\n      \"acquirerInformation\": {\n        \"acquirerBin\": \"ACQUIRER_BIN\",\n        \"acquirerCountry\": \"acquirerCountry\"\n      }\n    }\n  }\n}\n```\n### Authorization with 3DSv2 data\n```\n  PUT https://{your-host-name}/outpayce/v1/authorizations/{authorizationId} HTTP/1.1\n  Content-Type: application/vnd.amadeus+json\n  ...\n{\n  \"data\": {\n    \"id\": \"{authorizationId}\",\n    \"amount\": {\n      \"value\": \"123.45\",\n      \"currencyCode\": \"EUR\"\n    },\n    \"authorizationType\": \"AUTHORIZATION_ONLY\",\n    \"method\": \"CARD\",\n    \"card\": {\n      \"vendorCode\": \"VI\",\n      \"cardNumber\": \"4000000000000001\",\n      \"cvv\": \"123\",\n      \"holderName\": \"Card Holder Name\",\n      \"expiryDate\": \"2024-12\"\n    },\n    \"operationContext\": {\n      \"merchantAccount\": {\n        \"name\": \"MERCHANT_ACCOUNT\",\n        \"login\": \"merchantLogin\",\n        \"password\": {\n          \"payload\": \"merchantPasword\"\n        }\n      },\n      \"acquirerInformation\": {\n        \"acquirerBin\": \"ACQUIRER_BIN\",\n        \"acquirerCountry\": \"acquirerCountry\"\n      },\n      \"threeDomainSecure\": {\n        \"eci\": \"05\",\n        \"cavv\": \"AJkBAWUDOQAAABu8l4F5dQAAAAB=\",\n        \"transStatus\": \"Y\",\n        \"version\": \"2.2.0\",\n        \"dsTransactionId\": \"e9bed923-7dbe-4e03-9886-1c4c3bba4934\"\n      }\n    }\n  }\n}\n```\n\n### Authorization with Travel Segment Data\n```\n  PUT https://{your-host-name}/outpayce/v1/authorizations/{authorizationId} HTTP/1.1\n  Content-
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AuthorizationPayload"
            }
          }
        ],
        "tags": [
          "Acceptance"
        ]
      },
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/reversals/{id}": {
      "put": {
        "summary": "",
        "operationId": "put-reversals-id",
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ReversalPayload"
            },
            "examples": {
              "Successful Response": {
                "data": {
                  "parentOperationId": "{authorizationId}",
                  "id": "{reversalId}",
                  "method": "CARD",
                  "card": {
                    "vendorCode": "VI",
                    "maskedCardNumber": "400000------0001"
                  },
                  "approvalCode": "APPROVAL_CODE",
                  "timestamp": "2022-11-28T13:37:00Z"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/error-response-400"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "403": {
            "$ref": "#/responses/error-response-403"
          },
          "409": {
            "$ref": "#/responses/error-response-409"
          },
          "422": {
            "$ref": "#/responses/error-response-422"
          },
          "424": {
            "$ref": "#/responses/error-response-424"
          },
          "500": {
            "$ref": "#/responses/error-response-500"
          }
        },
        "description": "This endpoints initiates a reversal operation.\n\n## Examples of Reversal scenarios\n### Reversal simple request\n```\n  PUT https://{your-host-name}/outpayce/v1/reversals/{reversalId} HTTP/1.1\n  Content-Type: application/vnd.amadeus+json\n  ...\n{\n  \"data\": {\n    \"parentOperationId\": \"{authorizationId}\",\n    \"id\": \"{reversalId}\",\n    \"amount\": {\n      \"value\": \"123.45\",\n      \"currencyCode\": \"EUR\"\n    }\n  }\n}\n```\n\n### Reversal request with optional data\n```\n  PUT https://{your-host-name}/outpayce/v1/reversals/{reversalId} HTTP/1.1\n  Content-Type: application/vnd.amadeus+json\n  ...\n{\n  \"data\": {\n    \"parentOperationId\": \"{authorizationId}\",\n    \"id\": \"{reversalId}\",\n    \"amount\": {\n      \"value\": \"123.45\",\n      \"currencyCode\": \"EUR\"\n    },\n    \"method\": \"CARD\",\n    \"card\": {\n      \"vendorCode\": \"VI\",\n      \"cardNumber\": \"4000000000000001\",\n      \"expiryDate\": \"2024-12\"\n    },\n    \"operationContext\": {\n      \"merchantAccount\": {\n        \"name\": \"MERCHANT_ACCOUNT\",\n        \"login\": \"merchantLogin\",\n        \"password\": {\n          \"payload\": \"merchantPasword\"\n        }\n      },\n      \"acquirerInformation\": {\n        \"acquirerBin\": \"ACQUIRER_BIN\",\n        \"acquirerCountry\": \"acquirerCountry\"\n      }\n    },\n    \"approvalCode\": \"APPROVAL_CODE\",\n    \"timestamp\": \"2022-11-28T13:37:00Z\"\n  }\n}\n```",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ReversalPayload"
            }
          }
        ],
        "tags": [
          "Acceptance"
        ]
      },
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/captures/{id}": {
      "put": {
        "summary": "",
        "operationId": "put-captures-id",
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/CaptureResponse"
            },
            "examples": {
              "Successful Response": {
                "data": {
                  "parentOperationId": "{authorizationId}",
                  "id": "{captureId}",
                  "method": "CARD",
                  "amount": {
                    "value": "123.45",
                    "currencyCode": "EUR"
                  },
                  "status": "RECEIVED",
                  "timestamp": "2022-11-28T15:18:00Z"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/error-response-400"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "403": {
            "$ref": "#/responses/error-response-403"
          },
          "409": {
            "$ref": "#/responses/error-response-409"
          },
          "422": {
            "$ref": "#/responses/error-response-422"
          },
          "424": {
            "$ref": "#/responses/error-response-424"
          },
          "500": {
            "$ref": "#/responses/error-response-500"
          }
        },
        "description": "This endpoint initiates a capture operation.\n\n## Example of a Capture scenario\n ```\n  PUT https://{your-host-name}/outpayce/v1/captures/{captureId} HTTP/1.1\n  Content-Type: application/vnd.amadeus+json\n  ... \n {\n          \"data\": {\n            \"parentOperationId\": \"{authorizationId}\",\n            \"id\": \"{captureId}\",\n            \"amount\": {\n              \"value\": \"123.45\",\n              \"currencyCode\": \"EUR\"\n            },\n            \"method\": \"CARD\",\n            \"card\": {\n              \"vendorCode\": \"VI\",\n              \"cardNumber\": \"4000000000000001\",\n              \"expiryDate\": \"2024-12\",\n              \"holderName\": \"Card Holder Name\"\n            },\n            \"approvalCode\": \"APPROVAL_CODE\",\n            \"timestamp\": \"2022-11-28T13:37:00Z\", \n            \"operationContext\": {\n              \"merchantAccount\": {\n                \"name\": \"MERCHANT_ACCOUNT\",\n                \"login\": \"merchantLogin\",\n                \"password\": {\n                  \"payload\": \"merchantPasword\"\n                }\n              },\n              \"acquirerInformation\": {\n                \"acquirerBin\": \"ACQUIRER_BIN\",\n                \"acquirerCountry\": \"acquirerCountry\"\n              },\n              \"links\": [\n                {\n                    \"rel\": \"webhook\",\n                    \"href\": \"https://{third-party}.payment.feeds.outpayce.com/{attributed-sap}/SPWREQ/v1/payment/3rd-party-gateway/{third-party}/captures/ae2db239-57a5-434c-b77c-29d6776a2bfa/events\"\n                }\n              ]\n            },\n            \"purposeOfOperation\": {\n                    \"sales\": [{\n                        \"salesItems\": [{\n                            \"flightSalesDetails\": {\n                                \"ticketNumber\": \"1250123456789\",\n                            }\n                        },\n                        {\n                          \"flightSalesDetails\": {\n                                \"ticketNumber\": \"4352123456789\",\n                            }\n                        }\n                      ]\n                    }\n                ]\n            }\n          }\n        }\n```",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CapturePayload"
            }
          }
        ],
        "tags": [
          "Clearing"
        ]
      },
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/refunds/{id}": {
      "put": {
        "summary": "",
        "operationId": "put-refunds-id",
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/RefundResponse"
            },
            "examples": {
              "Successful Response": {
                "data": {
                  "parentOperationId": "{authorizationId}",
                  "id": "{refundId}",
                  "method": "CARD",
                  "amount": {
                    "value": "123.45",
                    "currencyCode": "EUR"
                  },
                  "status": "RECEIVED",
                  "timestamp": "2022-11-28T15:18:00Z"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/error-response-400"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "403": {
            "$ref": "#/responses/error-response-403"
          },
          "422": {
            "$ref": "#/responses/error-response-422"
          },
          "424": {
            "$ref": "#/responses/error-response-424"
          },
          "500": {
            "$ref": "#/responses/error-response-500"
          },
          "502": {
            "$ref": "#/responses/error-response-502"
          }
        },
        "description": "This endpoint initiates a refund operation.\n\n## Example of a Refund scenario\n ```\n  PUT https://{your-host-name}/outpayce/v1/refunds/{refundId} HTTP/1.1\n  Content-Type: application/vnd.amadeus+json\n  ...\n   {\n          \"data\": {\n            \"parentOperationId\": \"{authorizationId}\",\n            \"id\": \"{refundId}\",\n            \"amount\": {\n              \"value\": \"123.45\",\n              \"currencyCode\": \"EUR\"\n            },\n            \"method\": \"CARD\",\n            \"card\": {\n              \"vendorCode\": \"VI\",\n              \"cardNumber\": \"4000000000000001\",\n              \"expiryDate\": \"2024-12\"\n            },\n            \"timestamp\": \"2022-11-28T13:37:00Z\", \n            \"operationContext\": {\n              \"merchantAccount\": {\n                \"name\": \"MERCHANT_ACCOUNT\",\n                \"login\": \"merchantLogin\",\n                \"password\": {\n                  \"payload\": \"merchantPasword\"\n                }\n              },\n              \"acquirerInformation\": {\n                \"acquirerBin\": \"ACQUIRER_BIN\",\n                \"acquirerCountry\": \"acquirerCountry\"\n              }\n              \"links\": [\n                  {\n                    \"rel\": \"webhook\",\n                    \"href\": \"https://{third-party}.payment.feeds.outpayce.com/{attributed-sap}/SPWREQ/v1/payment/3rd-party-gateway/{third-party}/refunds/ae2db239-57a5-434c-b77c-29d6776a2bfa/events\"\n                  }\n              ]\n            },\n            \"purposeOfOperation\": {\n                    \"sales\": [{\n                        \"salesItems\": [{\n                            \"flightSalesDetails\": {\n                                \"ticketNumber\": \"1250123456789\",\n                            }\n                        },\n                        {\n                          \"flightSalesDetails\": {\n                                \"ticketNumber\": \"4352123456789\",\n                            }\n                        }\n                      ]\n                    }\n                ]\n            }\n          }\n   }",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RefundPayload"
            }
          }
        ],
        "tags": [
          "Clearing"
        ]
      },
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    }
  },
  "definitions": {
    "AuthorizationPayload": {
      "title": "Authorization Payload",
      "type": "object",
      "example": {
        "data": {
          "id": "{authorizationId}",
          "amount": {
            "value": "123.45",
            "currencyCode": "EUR"
          },
          "authorizationType": "AUTHORIZATION_ONLY",
          "method": "CARD",
          "pointOfInteraction": {
            "operatingEnvironment": {
              "holderInteractionMode": "ECOMMERCE"
            }
          },
          "card": {
            "vendorCode": "VI",
            "cardNumber": "4000000000000001",
            "cvv": "123",
            "expiryDate": "2024-12"
          },
          "operationContext": {
            "merchantAccount": {
              "name": "{merchant-account}",
              "login": "{merchantLogin}",
              "password": {
                "payload": "{merchantPasword}"
              }
            },
            "acquirerInformation": {
              "acquirerBin": "{acquirer-bin}",
              "acquirerCountry": "{acquirerCountry}"
            }
          },
          "purposeOfOperation": {
            "sales": [
              {
                "reference": "NYWSMG",
                "referenceType": "PNR",
                "salesItems": [
                  {
                    "category": "FLIGHT",
                    "flightSalesDetails": {
                      "flightLegs": [
                        {
                          "fareBasisCode": "{fare-code}",
                          "departureAirportCode": "MEL",
                          "departureTime": "2023-01-24T16:50:00Z",
                          "arrivalAirportCode": "BKK",
                          "arrivalTime": "2023-01-24T20:15:00Z",
                          "carrierCode": "QH",
                          "couponNumber": "1",
                          "flightNumber": "1661",
                          "serviceClass": "V"
                        }
                      ],
                      "issuingCarrierCode": "BA",
                      "travelAgencyName": "BRITISH AIRWAYS TRAVEL SHOP",
                      "travelAgencyCode": "91492693",
                      "passenger": {
                        "name": {
                          "firstName": "JOHN",
                          "lastName": "DOE"
                        },
                        "flightPassengerType": "ADULT"
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      },
      "properties": {
        "data": {
          "$ref": "#/definitions/Authorization"
        }
      }
    },
    "ReversalPayload": {
      "title": "Reversal Payload",
      "type": "object",
      "example": {
        "data": {
          "parentOperationId": "{authorizationId}",
          "id": "{reversalId}",
          "amount": {
            "value": "123.45",
            "currencyCode": "EUR"
          },
          "method": "CARD",
          "card": {
            "vendorCode": "VI",
            "cardNumber": "4000000000000001",
            "expiryDate": "2024-12"
          },
          "approvalCode": "12345678",
          "operationContext": {
            "merchantAccount": {
              "name": "{merchant-account}",
              "password": {
                "payload": "{merchantPasword}"
              },
              "login": "{merchantLogin}"
            },
            "acquirerInformation": {
              "acquirerBin": "{acquirer-bin}",
              "acquirerCountry": "{acquirerCountry}"
            }
          }
        }
      },
      "properties": {
        "data": {
          "$ref": "#/definitions/Reversal"
        }
      }
    },
    "CapturePayload": {
      "title": "Capture Payload",
      "type": "object",
      "example": {
        "data": {
          "parentOperationId": "{authorizationId}",
          "id": "{captureId}",
          "amount": {
            "value": "123.45",
            "currencyCode": "EUR"
          },
          "method": "CARD",
          "card": {
            "vendorCode": "VI",
            "cardNumber": "4000000000000001",
            "expiryDate": "2024-12"
          },
          "approvalCode": "12345678",
          "operationContext": {
            "merchantAccount": {
              "name": "{merchant-account}",
              "password": {
                "payload": "{merchantPasword}"
              },
              "login": "{merchantLogin}"
            },
            "acquirerInformation": {
              "acquirerBin": "{acquirer-bin}",
              "acquirerCountry": "{acquirerCountry}"
            },
            "links": [
              {
                "rel": "webhook",
                "href": "https://{third-party}.payment.feeds.outpayce.com/{attributed-sap}/SPWREQ/v1/payment/3rd-party-gateway/{third-party}/captures/ae2db239-57a5-434c-b77c-29d6776a2bfa/events"
              }
            ]
          },
          "timestamp": "2022-11-28T13:37:00Z",
          "purposeOfOperation": {
            "sales": [
              {
                "salesItems": [
                  {
                    "category": "FLIGHT",
                    "flightSalesDetails": {
                      "passenger": {
                        "name": {
                          "firstName": "JOHN",
                          "lastName": "DOE"
                        }
                      },
                      "flightLegs": [
                        {
                          "departureAirportCode": "CDG",
                          "travelDate": "2024-01-09",
                          "departureTime": "2024-01-09T18:15:00Z",
                          "carrierCode": "6X",
                          "flightNumber": "3847",
                          "serviceClass": "B",
                          "arrivalTime": "2024-01-09T19:45:00Z",
                          "couponNumber": "194725",
                          "arrivalAirportCode": "NCE"
                        }
                      ],
                      "ticketNumber": "1469380571"
                    }
                  }
                ],
                "referenceOwner": "1A",
                "reference": "RECLOC",
                "referenceType": "PNR"
              }
            ]
          }
        }
      },
      "properties": {
        "data": {
          "$ref": "#/definitions/Capture"
        }
      }
    },
    "RefundPayload": {
      "title": "Refund Payload",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Refund"
        }
      },
      "example": {
        "data": {
          "parentOperationId": "{authorizationId}",
          "id": "{refundId}",
          "amount": {
            "value": "123.45",
            "currencyCode": "EUR"
          },
          "method": "CARD",
          "card": {
            "vendorCode": "VI",
            "cardNumber": "4000000000000001",
            "expiryDate": "2024-12"
          },
          "timestamp": "2022-11-28T13:37:00Z",
          "operationContext": {
            "merchantAccount": {
              "name": "{merchant-account}",
              "login": "{merchantLogin}",
              "password": {
                "payload": "{merchantPasword}"
              }
            },
            "acquirerInformation": {
              "acquirerBin": "{acquirer-bin}",
              "acquirerCountry": "{acquirerCountry}"
            },
            "links": [
              {
                "rel": "webhook",
                "href": "https://{third-party}.payment.feeds.outpayce.com/{attributed-sap}/SPWREQ/v1/payment/3rd-party-gateway/{third-party}/captures/ae2db239-57a5-434c-b77c-29d6776a2bfa/events"
              }
            ]
          },
          "purposeOfOperation": {
            "sales": [
              {
                "salesItems": [
                  {
                    "flightSalesDetails": {
                      "ticketNumber": "{1250123456789}"
                    }
                  },
                  {
                    "flightSalesDetails": {
                      "ticketNumber": "{4352123456789}"
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "Authorization": {
      "title": "Operation Authorization",
      "allOf": [
        {
          "$ref": "#/definitions/Operation"
        },
        {
          "type": "object",
          "properties": {
            "amount": {
              "$ref": "#/definitions/Amount"
            },
            "card": {
              "$ref": "#/definitions/Card"
            },
            "approvalCode": {
              "type": "string",
              "description": "Authorization approval code acting as primary proof of availability of funds that can be used by the payee in order to request a capture of those funds to their bank. Mandatory for Credit Card transactions.",
              "minLength": 6,
              "maxLength": 8
            },
            "authorizationType": {
              "type": "string",
              "description": "\"AUTHORIZATION_ONLY\" or \"AUTHOR_AND_CAPTURE\".\nIndicates how the settlement is triggered:\n - If AUTHORIZATION_ONLY, then the clearing of the authorization needs to be triggered via its dedicated operation, i.e. Capture.\n  - If AUTHOR_AND_CAPTURE, then the clearing and settlement is triggered automatically.",
              "enum": [
                "AUTHORIZATION_ONLY",
                "AUTHOR_AND_CAPTURE"
              ]
            },
            "schemeTransactionId": {
              "type": "string",
              "description": "Identifier of the payment transaction in the card scheme system."
            },
            "pspReconciliationReference": {
              "type": "string",
              "description": "Authorization PSP reference provided for reconciliation purpose (also identified as _PRR_ in other Amadeus payment applications). This reference is generated by the payee in order to reconciliate the payment settlement against the sales."
            }
          }
        }
      ]
    },
    "AuthorizationResponse": {
      "title": "Authorization Response",
      "example": {
        "data": {
          "id": "{authorizationId}",
          "method": "CARD",
          "card": {
            "vendorCode": "VI",
            "maskedCardNumber": "400000------0001"
          },
          "approvalCode": "12345678",
          "externalId": "externalReference",
          "schemeTransactionId": "987654321234567",
          "timestamp": "2022-11-28T13:37:00Z"
        }
      },
      "properties": {
        "data": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Authorization"
            }
          ]
        }
      }
    },
    "Reversal": {
      "title": "Operation_Reversal",
      "allOf": [
        {
          "$ref": "#/definitions/Operation"
        },
        {
          "type": "object",
          "properties": {
            "amount": {
              "$ref": "#/definitions/Amount"
            },
            "approvalCode": {
              "type": "string",
              "minLength": 6,
              "maxLength": 8,
              "description": "Authorization approval code acting as primary proof of availability of funds that can be used by the payee in order to request a capture of those funds to their bank."
            },
            "card": {
              "$ref": "#/definitions/Card"
            },
            "pspReconciliationReference": {
              "type": "string",
              "description": "Authorization PSP reference provided for reconciliation purpose (also identified as _PRR_ in other Amadeus payment applications). This reference is generated by the payee in order to reconciliate the payment settlement against the sales."
            }
          }
        }
      ]
    },
    "Capture": {
      "title": "Operation Capture",
      "allOf": [
        {
          "$ref": "#/definitions/Operation"
        },
        {
          "type": "object",
          "properties": {
            "amount": {
              "$ref": "#/definitions/Amount"
            },
            "card": {
              "$ref": "#/definitions/Card"
            },
            "approvalCode": {
              "type": "string",
              "description": "Authorization approval code acting as primary proof of availability of funds that can be used by the payee in order to request a capture of those funds to their bank.",
              "minLength": 6,
              "maxLength": 8
            },
            "pspReconciliationReference": {
              "type": "string",
              "description": "Authorization PSP reference provided for reconciliation purpose (also identified as _PRR_ in other Amadeus payment applications). This reference is generated by the payee in order to reconciliate the payment settlement against the sales."
            }
          }
        }
      ]
    },
    "CaptureResponse": {
      "title": "Capture Response",
      "example": {
        "data": {
          "parentOperationId": "{authorizationId}",
          "id": "{captureId}",
          "method": "CARD",
          "amount": {
            "value": "123.45",
            "currencyCode": "EUR"
          },
          "status": "RECEIVED",
          "timestamp": "2022-11-28T13:37:00Z"
        }
      },
      "properties": {
        "data": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Capture"
            }
          ]
        }
      }
    },
    "Refund": {
      "title": "Operation Refund",
      "allOf": [
        {
          "$ref": "#/definitions/Operation"
        },
        {
          "type": "object",
          "properties": {
            "amount": {
              "$ref": "#/definitions/Amount"
            },
            "card": {
              "$ref": "#/definitions/Card"
            },
            "pspReconciliationReference": {
              "type": "string",
              "description": "Authorization PSP reference provided for reconciliation purpose (also identified as _PRR_ in other Amadeus payment applications). This reference is generated by the payee in order to reconciliate the payment settlement against the sales."
            }
          }
        }
      ]
    },
    "RefundResponse": {
      "title": "Refund Response",
      "example": {
        "data": {
          "parentOperationId": "{authorizationId}",
          "id": "{refundId}",
          "method": "CARD",
          "amount": {
            "value": "123.45",
            "currencyCode": "EUR"
          },
          "status": "RECEIVED",
          "timestamp": "2022-11-28T13:37:00Z"
        }
      },
      "properties": {
        "data": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Refund"
            }
          ]
        }
      }
    },
    "Operation": {
      "title": "Operation",
      "type": "object",
      "description": "An *Operation* is either a payment operation implying or not a direct move of funds between a payer and a payee. An *Operation* is therefore an abstract resource that may be one of the following: *Authorization*, *Reversal*, *Capture*, *Refund*.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Amadeus Operation identifier.\nThis identifier is generated by Amadeus Payment Platform and uniquely represents this operation."
        },
        "parentOperationId": {
          "type": "string",
          "description": "Identifier of a previous operation belonging to the same payment."
        },
        "externalId": {
          "type": "string",
          "description": "Identifier of the operation generated by the service host. Can be populated in the transaction response containing a specific operation identifier."
        },
        "method": {
          "type": "string",
          "description": "\"CARD\". It drives information requested at authorization time.\n- If CARD, then card information is provided if the operation is payment related.\n"
        },
        "purposeOfOperation": {
          "$ref": "#/definitions/OperationPurposeOfOperation"
        },
        "pointOfInteraction": {
          "$ref": "#/definitions/OperationPointOfInteraction"
        },
        "status": {
          "type": "string",
          "description": "Operation status. For CARD method of payment, this value must be \"RECEIVED\" and must be present in CAPTURE & REFUND Operation responses. Otherwise Outpayce System will not be able to process the transaction."
        },
        "timestamp": {
          "type": "string",
          "description": "Datetime of the operation.",
          "format": "date-time"
        },
        "operationContext": {
          "$ref": "#/definitions/OperationOperationContext"
        }
      }
    },
    "Amount": {
      "title": "Operation Amount",
      "description": "Operation amount",
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "The value of the amount."
        },
        "currencyCode": {
          "type": "string",
          "description": "Indicate the currency of the provided amount (following [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)).",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "Card": {
      "title": "Card",
      "type": "object",
      "description": "The payment card is a particular payment instrument.",
      "properties": {
        "vendorCode": {
          "type": "string",
          "description": "Upper case key representing the brand of the payment card chosen by the payer to process that payment transaction out of that non-exhaustive list:\n- \"VI\" for VisaÂ® (usually card starting with 4xxx),\n- \"CA\" for MastercardÂ® (usually card starting with 5xxx, 6xxx or 2xxx),\n- \"AX\" for American ExpressÂ® (usually card starting with 34xxx or 37xxx),\n- \"DC\" or \"DS\" for Diners ClubÂ®/DiscoverÂ® (usually card starting with 64xxx or 65xxx),\n- \"JC\" for JCBÂ® (Japan Credit Bureau) (usually card starting with 35xxx),\n- \"UP\" for UnionPayÂ® (usually car starting with 62xxx),\n- \"TP\" for UATPÂ® (usually card starting with 1xxx)...\nPrerequisite is of course that this brand is already contractually made available on behalf of the payee. For a more complete list of card brands (AuraÂ®, CBÂ®, eloÂ®, HipercardÂ®, MaestroÂ®, madaÂ®...), please liaise with your Business Contact.\n",
          "minLength": 2,
          "maxLength": 2
        },
        "holderName": {
          "type": "string",
          "description": "Card holder fullname registered against that payment card."
        },
        "expiryDate": {
          "type": "string",
          "description": "Card expiry date, when present, displayed on the front of the payment card. Format expected is *YYYY-MM*.",
          "minLength": 7,
          "maxLength": 7,
          "pattern": "20[0-9]{2}-(0[1-9]|10|11|12)"
        },
        "cvv": {
          "type": "string",
          "description": "Card Verification Value, also known as [card security code](https://en.wikipedia.org/wiki/Card_security_code), displayed (usually) on the back of the payment card. Handling of this very sensitive information must comply with [PCI-DSS](https://en.wikipedia.org/wiki/Payment_Card_Industry_Data_Security_Standard).",
          "minLength": 3,
          "maxLength": 4
        },
        "tokenizedCardNumber": {
          "type": "string",
          "description": "Token representing the payment card of the payer, compliant with [PCI-DSS](https://en.wikipedia.org/wiki/Payment_Card_Industry_Data_Security_Standard) scope reduction tokenization principles. This information being sensitive, as for the cardNumber field itseld, please do not expect this information to be returned by default."
        },
        "maskedCardNumber": {
          "type": "string",
          "description": "Masked payment card number, following recommandations of [PCI-DSS](https://en.wikipedia.org/wiki/Payment_Card_Industry_Data_Security_Standard). This information will usually be returned for information purpose, for instance it can be displayed or printed in some payment receipt."
        },
        "cardNumber": {
          "type": "string",
          "description": "Payment card number, also known as PAN, or [primary account number](https://en.wikipedia.org/wiki/Payment_card_number), displayed (usually) on the front of the payment card. Handling of this very sensitive information must comply with [PCI-DSS](https://en.wikipedia.org/wiki/Payment_Card_Industry_Data_Security_Standard). This information will usually not be returned as is, but masked."
        },
        "holder": {
          "$ref": "#/definitions/Holder"
        }
      }
    },
    "Holder": {
      "title": "Payment Instrument Holder",
      "type": "object",
      "description": "Describe the holder of the payment instrument.",
      "properties": {
        "language": {
          "type": "string",
          "description": "Indicate the payment-instrument holder's language, lower case alpha-2 code is expected (following [ISO 639](https://en.wikipedia.org/wiki/ISO_639), eg. \"en\" for English)."
        },
        "email": {
          "type": "string",
          "description": "Indicate the payment-instrument holder's email address ([RFC 5322](https://tools.ietf.org/html/rfc5322)), please note that length beyond 70 characters and internationalization are not yet supported ([RFC 6530](https://tools.ietf.org/html/rfc6530))."
        },
        "billingAddress": {
          "title": "billingAddress",
          "type": "object",
          "description": "Indicate the payment-instrument holder's postal address, please standardize your input following recommendation from [UPU](http://www.upu.int) international interoperability standard (for instance, try to stick to non accented roman upper case characters, use standard abbreviations,...).",
          "properties": {
            "countryCode": {
              "type": "string",
              "minLength": 2,
              "maxLength": 2,
              "description": "Indicate the payment-instrument holder's country, upper case alpha-2 code is expected (following [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166), eg. \"AD\" for Andorra)."
            },
            "cityName": {
              "type": "string",
              "description": "Indicate the payment-instrument holder's city name, up to 35 characters."
            },
            "postalCode": {
              "type": "string",
              "description": "Indicate the payment-instrument holder's postal code, up to 10 characters."
            }
          }
        },
        "contacts": {
          "type": "object",
          "description": "A contact refers to the information that can be used to reach a person, a company or an organization.",
          "title": "Contact",
          "x-examples": {
            "Several contacts for different Purpose": {
              "contacts": [
                {
                  "email": {
                    "address": "business@test.com",
                    "category": "BUSINESS"
                  },
                  "purpose": "NOTIFICATION"
                },
                {
                  "email": {
                    "address": "personal@test.com",
                    "category": "PERSONAL"
                  },
                  "purpose": "STANDARD"
                },
                {
                  "phone": {
                    "number": "231366119911"
                  },
                  "purpose": "STANDARD"
                }
              ]
            }
          },
          "x-tags": [
            "contact",
            "phone",
            "email",
            "address",
            "message",
            "PII"
          ],
          "properties": {
            "phone": {
              "type": "object",
              "description": "Phone information.",
              "title": "Phone",
              "x-tags": [
                "phone",
                "contact",
                "address",
                "PII"
              ],
              "properties": {
                "text": {
                  "type": "string",
                  "description": "String containing the full phone number - applicable only when a structured phone (i.e. countryCallingCode + number) is not provided",
                  "example": "(+33)6123123",
                  "x-risk-personal-data-field": "PHONE_NUMBER"
                }
              }
            }
          }
        },
        "name": {
          "title": "name",
          "type": "object",
          "properties": {
            "lastName": {
              "type": "string"
            },
            "firstName": {
              "type": "string"
            }
          }
        }
      }
    },
    "OperationPurposeOfOperation": {
      "title": "Operation Purpose of Payment Operation",
      "type": "object",
      "description": "Purpose of the payment operation (sales, donation,...)",
      "properties": {
        "sales": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationSalesSummary"
          }
        }
      }
    },
    "OperationSalesSummary": {
      "title": "Operation Sales",
      "description": "Sales summary information, should itemized information be also necessary, then this level of detail will be transported by composition of SalesSummaryItem instances.",
      "type": "object",
      "properties": {
        "reference": {
          "type": "string",
          "description": "Reference identifying the sales."
        },
        "referenceType": {
          "type": "string",
          "description": "Type of reference identifying the sales."
        },
        "referenceOwner": {
          "type": "string",
          "description": "Owner of the reference type."
        },
        "salesItems": {
          "type": "array",
          "description": "Sales items information.",
          "items": {
            "$ref": "#/definitions/OperationSalesSummaryItem"
          }
        }
      }
    },
    "OperationSalesSummaryItem": {
      "title": "Operation Sales Item",
      "type": "object",
      "description": "Sales summary itemized information, usually as a collection of children of a SalesSummary instance.",
      "properties": {
        "category": {
          "type": "string",
          "description": "Category best qualifying the sales item.",
          "enum": [
            "FLIGHT"
          ]
        },
        "flightSalesDetails": {
          "$ref": "#/definitions/OperationSalesItemFlightDetails"
        }
      }
    },
    "OperationSalesItemFlightDetails": {
      "title": "Operation Sales Item Flight Details",
      "type": "object",
      "description": "Flight detailed item description as a sales summary item.",
      "properties": {
        "flightLegs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationSalesItemFlightLegDetails"
          }
        },
         "issuingCarrierCode": {
          "type": "string",
          "description": "IATA code of the validating carrier."
        },
        "travelAgencyCode": {
          "type": "string",
          "description": "Code identifying the travel agency resposible for this sales.."
        },
        "travelAgencyName": {
          "type": "string",
          "description": "Name of the travel agency resposible for this sales."
        },
        "passenger": {
          "type": "object",
          "description": "Passenger of the flight.",
          "properties": {
            "name": {
              "type": "object",
              "description": "Description of the name of a physical person",
              "properties": {
                "firstName": {
                  "type": "string",
                  "description": "First name."
                },
                "lastName": {
                  "type": "string",
                  "description": "Last name."
                }
              }
            },
            "flightPassengerType": {
              "type": "string",
              "description": "Specifies flight passenger type",
              "enum": [
                "ADULT",
                "CHILD",
                "INFANT",
                "INFANT_WITH_SEAT"
              ],
              "example": "ADULT"
            }
          }
        },
        "ticketNumber": {
          "type": "string",
          "description": "Ticket number of the flight. Not present at Authorization time."
        }
      }
    },
    "OperationSalesItemFlightLegDetails": {
      "title": "Operation Sales Item Flight Leg Details",
      "type": "object",
      "description": "Flight itinerary details associated to a given passenger as sales summary flight details at flight segment level.",
      "properties": {
        "fareBasisCode": {
          "type": "string",
          "description": "Airline fare basis code identifying a fare type."
        },
        "arrivalTime": {
          "type": "string",
          "format": "date-time",
          "description": "UTC date and time of the scheduled arrival, compliant with ISO8601."
        },
        "arrivalAirportCode": {
          "type": "string",
          "description": "IATA 3-letter code representing the airport of arrival of that flight leg."
        },
        "departureTime": {
          "type": "string",
          "format": "date-time",
          "description": "UTC date and time of the scheduled departure, compliant with ISO8601."
        },
        "departureAirportCode": {
          "type": "string",
          "description": "IATA 3-letter code representing the airport of departure of that flight leg."
        },
        "carrierCode": {
          "type": "string",
          "description": "IATA code of the carrier in charge of that flight segment."
        },
        "couponNumber": {
          "type": "string",
          "description": "Coupon number."
        },
        "flightNumber": {
          "type": "string",
          "description": "Flight number associated to the carrier in charge of that flight segment."
        },
        "serviceClass": {
          "type": "string",
          "description": "Reference identifying the class of travel and included services (with their conditions and benefits) sold."
        },
        "travelDate": {
          "type": "string",
          "format": "date",
          "description": "Day when travel over that segment begins."
        }
      }
    },
    "OperationOperationContext": {
      "title": "Operation Context",
      "type": "object",
      "properties": {
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationLink"
          }
        },
        "threeDomainSecure": {
          "$ref": "#/definitions/OperationThreeDomainSecure"
        },
        "termsAndConditions": {
          "$ref": "#/definitions/OperationTermsAndConditions"
        },
        "interactionCondition": {
          "type": "string",
          "description": "Main condition qualifying the interaction mechanism of the transaction.\nHere are the different interactions supported at the moment:\n- \\\"ACCOUNT_VERIFICATION\\\",\n- \\\"COMMIT_PREAUTHOR\\\" (commitment of a preauthorization),\n- \\\"ECOMMERCE\\\",\n- \\\"FACE_TO_FACE_PIN\\\",\n- \\\"FACE_TO_FACE_MANUAL\\\",\n- \\\"IN_FLIGHT\\\",\n- \\\"INQUIRY\\\",\n- \\\"OTHER_NOT_PRESENT\\\" (other Card Not Present interaction),\n- \\\"ON_FILE\\\",\n- \\\"PAPER_ORDER\\\",\n- \\\"PHONE_ORDER\\\",\n- \\\"PREAUTHORIZATION\\\" (preauthorizing still allows amount to vary),\n- \\\"RECURRING\\\",\n- \\\"MERCHANT_SUSPICIOUS\\\",\n- \\\"TIME_BASED\\\".\n"
        },
        "transactionIntent": {
          "type": "string",
          "description": "Provide the original intent of the (future) transaction(s). \nIt is strongly recommended to communicate that intent of use for Merchant-initiated transactions, and even a mandate under some local regulations. Here are the different intents supported at the moment:\n- \\\"NO_PAYMENT\\\" (like account verification or inquiries),\n- \\\"PRE_PAYMENT_ONLY\\\" (implicitly meaning there is some remainder of payment to cover via some completion later on, e.g. a 10% downpayment),\n- \\\"ONE_OFF\\\" (default),\n- \\\"DEFERRED\\\" (due to some business rationales),\n- \\\"NO_SHOW_PENALTY\\\",\n- \\\"CANCELLATION_PENALTY\\\",\n- \\\"LATE_CHANGE_PENALTY\\\",\n- \\\"DEPOSIT_RETAINER_PENALTY\\\",\n- \\\"ANY_PENALTY\\\",\n- \\\"COMPLETION\\\" (of a pre-payment done earlier),\n- \\\"EXTENDED_PERIOD_DELAY\\\" (due to some specific business cases),\n- \\\"TECHNICAL_RESUBMISSION\\\",\n- \\\"INSTALLMENTS\\\" (with terms and plans agreed in advance),\n- \\\"SUBSCRIPTION\\\" (of fixed amount through regular schedule),\n- \\\"RECURRING\\\" (of variable amounts through regular schedule, e.g. utilities payment),\n- \\\"REUSABLE\\\" (at any time, of any amount, within payment instrument holder scope of consent of course).\n"
        },
        "transactionInitiator": {
          "type": "string",
          "default": "HOLDER",
          "enum": [
            "MERCHANT",
            "HOLDER"
          ],
          "description": "Indicate whether the transaction is a MERCHANT initiated transaction (_MIT_) or a payment instrument HOLDER initiated transaction (aka _CIT_ with _C_ standing for cardholder or consumer)."
        },
        "acquirerInformation": {
          "$ref": "#/definitions/OperationAcquirerInformation"
        },
        "merchantAccount": {
          "$ref": "#/definitions/OperationMerchantAccount"
        }
      }
    },
    "OperationThreeDomainSecure": {
      "title": "Operation Three Domain Secure",
      "type": "object",
      "description": "Operation 3-Domain Secure information.",
      "properties": {
        "collectionIndicator": {
          "type": "string",
          "description": "UCAF collection indicator value."
        },
        "aav": {
          "type": "string",
          "description": "UCAF Accountholder Authentication Value."
        },
        "aevv": {
          "type": "string",
          "description": "Base64-encoded American Express Verification Value."
        },
        "cavv": {
          "type": "string",
          "description": "Base64-encoded Cardholder Authentication Verification Value."
        },
        "eci": {
          "type": "string",
          "description": "Computed e-commerce indicator."
        },
        "transStatus": {
          "type": "string",
          "description": "3-D Secure 2.x (or later) Final Authentication Result."
        },
        "dsTransactionId": {
          "type": "string",
          "description": "3-D Secure 2.x (or later) Directory Server Transaction Identifier.",
          "format": "uuid"
        },
        "version": {
          "type": "string",
          "description": "3-D Secure protocol version."
        }
      }
    },
    "OperationTermsAndConditions": {
      "title": "Operation Terms And Conditions",
      "type": "object",
      "properties": {
        "credentialsOnFile": {
          "$ref": "#/definitions/OperationCredentialsOnFile"
        },
        "installments": {
          "$ref": "#/definitions/OperationInstallmentDetails"
        }
      }
    },
    "OperationCredentialsOnFile": {
      "title": "Record Credentials On File",
      "type": "object",
      "properties": {
        "instrumentFilingRequest": {
          "type": "string",
          "enum": [
            "STORING",
            "REUSE"
          ],
          "description": "Indicate whether the transaction is the one where the credential are being stored for the first time or it is a subsequent follow up transaction that is performed using stored credentials."
        },
        "reuseProof": {
          "type": "object",
          "properties": {
            "traceReference": {
              "type": "string",
              "description": "A reference of the trace of the consent for filing or original filing successful transaction."
            }
          }
        }
      }
    },
    "OperationInstallmentDetails": {
      "type": "object",
      "title": "OperationInstallmentDetails",
      "properties": {
        "maxNumber": {
          "type": "integer"
        },
        "period": {
          "$ref": "#/definitions/OperationPeriod"
        },
        "firstInstallmentAmount": {
          "$ref": "#/definitions/Amount"
        },
        "subsequentInstallmentAmount": {
          "$ref": "#/definitions/Amount"
        },
        "interestAmount": {
          "$ref": "#/definitions/Amount"
        }
      }
    },
    "OperationPeriod": {
      "type": "object",
      "title": "Operation Period",
      "description": "Models a period of time between two dates and inclusive only of the days of the week specified; for instance using the example: \nMondays, Tuesdays, Saturdays and Sundays between 22nd Nov 2019 and 26th Dec 2019 are included\nSome parts of the period can excluded.\n",
      "properties": {
        "frequencyType": {
          "enum": [
            "DAILY",
            "MONTHLY",
            "WEEKLY"
          ],
          "description": "Frequency type"
        }
      },
      "minProperties": 1,
      "x-examples": {
        "Example": {
          "frequencyType": "MONTHLY"
        }
      },
      "x-tags": [
        "HotelIT",
        "Hospitality",
        "Period"
      ]
    },
    "OperationAcquirerInformation": {
      "title": "Operation_AcquirerInformation",
      "type": "object",
      "description": "Information related to the acquirer of a payment operation.",
      "properties": {
        "acquirerBin": {
          "type": "string",
          "description": "Acquirer Bank Identifier Number."
        },
        "acquirerCountry": {
          "type": "string",
          "description": "ISO 3166-1 country code of the acquirer.",
          "pattern": "[a-zA-Z]{2}"
        }
      }
    },
    "OperationMerchantAccount": {
      "title": "Operation_MerchantAccount",
      "type": "object",
      "description": "Information related to the merchant of a payment operation.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name identifiying the merchant in the service host system."
        },
        "login": {
          "type": "string",
          "description": "Login of a user registered in the service host system and belonging to the merchant."
        },
        "password": {
          "$ref": "#/definitions/DocumentEnvelope"
        }
      }
    },
    "DocumentEnvelope": {
      "title": "Payment Document Envelope",
      "type": "object",
      "x-tags": [
        "DocumentEnvelope",
        "blob",
        "blb",
        "binary",
        "document",
        "compression",
        "zip",
        "attachment"
      ],
      "description": "Data model to convey any kind of document, any format with associated meta data to help the identification and the decoding.",
      "x-examples": {
        "IATA Xml example": {
          "payload": "ewogICAgIndhcm5pbmdzIjogW3sKICAgICAgICAgICAgImNvZGUiOiAiNjUyMjciLAo",
          "metaData": {
            "ianaContentType": "xml",
            "name": "Amadeus_Order_Change_example1",
            "documentType": "XML",
            "grammarType": "XSD",
            "grammarName": "IATA_OrderChangeNotifRQ",
            "grammarVersion": "7.000",
            "gammmarDomain": "http://www.iata.org/IATA/2015/00/2018.2/IATA_OrderChangeNotifRQ",
            "grammarRelease": "IATA2018.2",
            "encoding": "BASE_64"
          }
        }
      },
      "properties": {
        "payload": {
          "type": "string",
          "description": "This contains the payload of the document. It can either be raw data or encoded data in b6se4. see details in metaData block."
        }
      }
    },
    "ErrorResponse": {
      "title": "Error Response",
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      }
    },
    "Error": {
      "type": "object",
      "description": "The Error Definition",
      "title": "Error",
      "properties": {
        "status": {
          "type": "integer",
          "description": "The [HTTP status code](https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml) of this response. This is present only in terminal errors which cause an unsuccessful response. In the case of multiple errors, they must all have the same status."
        },
        "code": {
          "type": "integer",
          "description": "A machine-readable error code from the Amadeus Canned Messages table, that will enable the API Consumers code to handle this type of error"
        },
        "title": {
          "type": "string",
          "description": "An error title from the Canned Messages table with a 1:1 correspondence to the error code. This may be localized"
        },
        "detail": {
          "type": "string",
          "description": "An easy-to-read explanation specific to this occurrence of the problem. It should give the API consumer an idea of what went wrong and how to recover from it. Like the title, this fieldâ€™s value can be localized."
        },
        "source": {
          "type": "object",
          "title": "Error_Source",
          "properties": {
            "parameter": {
              "type": "string",
              "description": "The key of the URI path or query parameter that caused the error"
            },
            "pointer": {
              "type": "string",
              "description": "A JSON Pointer [RFC6901] to the associated entity in the request body that caused this error"
            },
            "example": {
              "type": "string",
              "description": "A sample input to guide the user when resolving this issue"
            }
          }
        }
      },
      "required": [
        "code",
        "title"
      ]
    },
    "OperationLink": {
      "title": "Operation Link",
      "type": "object",
      "properties": {
        "rel": {
          "type": "string",
          "description": "Relation of the link. In addition to [IANA standard relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml), payment area bears domain specific ones:\n- \\\"webhook\\\" to indicate where the API consumer is expected to update the status of a specific operation. Please refer to the Payment Operation Events API for more details.\n"
        },
        "href": {
          "type": "string",
          "description": "Absolute or relative URL.",
          "format": "uri"
        }
      }
    },
    "OperationOperatingEnvironment": {
      "title": "Operation Operating Environment",
      "type": "object",
      "description": "Operating Environment of a given Point of Interaction.",
      "properties": {
        "holderInteractionMode": {
          "type": "string",
          "enum": [
            "ECOMMERCE",
            "FACE_TO_FACE",
            "MAIL_ORDER",
            "HOLDER_NOT_PRESENT",
            "PHONE_ORDER",
            "RECURRING",
            "ON_FILE"
          ],
          "description": "Primary mode of interaction with the payment instrument holder that this Point of Business provides."
        }
      }
    },
    "OperationPointOfInteraction": {
      "title": "Operation Point Of Interaction",
      "type": "object",
      "description": "Characteristics and environmental information of a conceptually and individually identifiable point of business interaction leading to some operations.",
      "properties": {
        "operatingEnvironment": {
          "$ref": "#/definitions/OperationOperatingEnvironment"
        }
      }
    }
  },
  "basePath": "/outpayce/v1",
  "tags": [
    {
      "name": "Operation",
      "description": "**CREATING A PAYMENT OR PAYMENT INSTRUMENT RELATED OPERATION**\n"
    },
    {
      "name": "Acceptance",
      "description": "**ESTABLISHING THE PAYMENT CONTRACT**\n"
    },
    {
      "name": "Clearing",
      "description": "**TRANSFERRING THE MONEY**\n"
    }
  ],
  "responses": {
    "error-response-400": {
      "description": "**400 Bad Request error.** Problem reading or understanding request (Usually missing data or invalid requests). Please find below an exhaustive list of errors:\n\ncode   | - | title\n------:|:-:|:-\n33460  |   | MISSING REQUIRED INPUT PARAM(S) - PLEASE ADJUST REQUEST\n33459  |   | INVALID INPUT PARAM(S) - PLEASE ADJUST REQUEST\n  477  |   | INVALID FORMAT\n  \n",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      },
      "examples": {
        "application/vnd.amadeus+json": {
          "errors": [
            {
              "status": 400,
              "code": 33460,
              "title": "MISSING REQUIRED INPUT PARAM(S) - PLEASE ADJUST REQUEST",
              "details": "merchant account name is missing from request",
              "source": {
                "parameter": "#data/operationContext/merchantAccount/name"
              }
            }
          ]
        }
      }
    },
    "error-response-403": {
      "description": "**403 Forbidden error.** Generic error linked to permission mismatch. Please find below a non-exhaustive list of errors:\n\ncode   | - | title\n------:|:-:|:-\n 1666  |   | NOT ALLOWED\n",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      },
      "examples": {
        "application/vnd.amadeus+json": {
          "errors": [
            {
              "code": 1666,
              "title": "NOT ALLOWED"
            }
          ]
        }
      }
    },
    "error-response-409": {
      "description": "**409 Conflict error.** Generic error linked to conflicting operation. Please find below a non-exhaustive list of errors:\n\ncode   | - | title\n------:|:-:|:-\n33474  |   | PAYMENT TRANSACTION CANCELLED EXTERNALLY.\n25754  |   | REVERSAL ALREADY PERFORMED\n33477  |   | PAYMENT TRANSACTION ALREADY CANCELLED OR REFUNDED\n33478  |   | PAYMENT TRANSACTION ALREADY TOTALLY CANCELLED OR REFUNDED\n33479  |   | PAYMENT TRANSACTION EXPIRED.\n25888  |   | PARTIAL REVERSAL DISALLOWED\n33869  |   | PAYMENT REVERSAL DENIAL DUE TO CAPTURE PROCESSED\n39041  |   | DUPLICATE REQUEST ERROR\n 9659  |   | CC REVERSAL HAS BEEN LOCKED FOR THIS CARD BY ISSUEING BANK\n33034  |   | OUT OF REFUND PERIOD\n33562  |   | PAYMENT PARTIAL REFUND NOT ALLOWED\n33548  |   | PAYMENT PARTIAL CAPTURE NOT ALLOWED\n",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      },
      "examples": {
        "application/vnd.amadeus+json": {
          "errors": [
            {
              "code": 33474,
              "title": "PAYMENT TRANSACTION CANCELLED EXTERNALLY."
            }
          ]
        }
      }
    },
    "error-response-422": {
      "description": "**422 Unprocessable Entity error.** Generic error linked to unprocessable request. Please find below a non-exhaustive list of errors:\n\ncode   | - | title\n------:|:-:|:-\n   11  |   | \tUNABLE TO PROCESS\n 1304  |   |  CREDIT CARD NOT ACCEPTED\n",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      },
      "examples": {
        "application/vnd.amadeus+json": {
          "errors": [
            {
              "code": 1304,
              "title": "CREDIT CARD NOT ACCEPTED"
            }
          ]
        }
      }
    },
    "error-response-424": {
      "description": "**424 Failed Dependency error.** Generic error linked to 3rd party functional rejection. Please find below a non-exhaustive list of errors:\n\ncode   | - | title\n------:|:-:|:-\n 4751  |   | INVALID CARD\n33480  |   | PAYMENT TRANSACTION DECLINED. SUSPECTED FRAUD\n12678  |   | CC SECURITY ID DOES NOT MATCH\n 4223  |   | NAME MISMATCH\n12550  |   | AUTHORISATION DENIED INSUFFICIENT FUNDS\n34869  |   | CREDIT CARD DENIAL - INCORRECT PIN\n34477  |   | REVERSAL NOT PERFORMED\n33471  |   | PAYMENT ACTION DECLINED\n65222  |   | PAYMENT REQUIRES 3D SECURE\n",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      },
      "examples": {
        "application/vnd.amadeus+json": {
          "errors": [
            {
              "code": 33471,
              "title": "PAYMENT ACTION DECLINED"
            }
          ]
        }
      }
    },
    "error-response-500": {
      "description": "**500 Internal Server Error error.** Generic Amadeus internal error. Please find below a non-exhaustive list of errors:\n\ncode   | - | title\n------:|:-:|:-\n  974  |   | SYSTEM UNAVAILABLE\n  414  |   | INTERNAL PROCESSING ERROR\n 2894  |   | ERROR MESSAGE NOT FOUND\n",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      },
      "examples": {
        "application/vnd.amadeus+json": {
          "errors": [
            {
              "code": 2894,
              "title": "ERROR MESSAGE NOT FOUND"
            }
          ]
        }
      }
    },
    "error-response-502": {
      "description": "**502 Bad Gateway error.** Generic communication error downstream. Please find below a non-exhaustive list of errors:\n\ncode   | - | title\n------:|:-:|:-\n33457  |   | COMMUNICATION ERROR - PLEASE TRY AGAIN LATER\n 5038  |   | TIMEOUT ERROR UNKNOWN\n31787  |   | ISSUER NOT AVAILABLE\n",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      },
      "examples": {
        "application/vnd.amadeus+json": {
          "errors": [
            {
              "code": 31787,
              "title": "ISSUER NOT AVAILABLE"
            }
          ]
        }
      }
    },
    "error-response": {
      "description": "**Standard error. This error may be used if no other errors apply.\ncode   | - | title\n------:|:-:|:-\n  492  |   | ERROR\n",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    },
    "error-response-401": {
      "description": "**Unauthorized**\n",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    }
  }
}